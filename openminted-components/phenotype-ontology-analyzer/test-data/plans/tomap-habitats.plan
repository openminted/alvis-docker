<alvisnlp-plan id="tomap">

  <!-- ToMap on lemmas -->
  <module id="tomap" class="TomapProjector">
    <yateaFile inhibitCheck="true">&outdir;/yatea/corpus/default/xml/candidates.xml</yateaFile>
    <targetLayerName>habitats</targetLayerName>
    <conceptFeature>concept-id</conceptFeature>
    <explanationFeaturePrefix>explain_</explanationFeaturePrefix>
    <tomapClassifier graylist="resources/graylist_extended.heads" whole-proxy-distance="false" empty-words="resources/stopwords_EN.ttg">resources/OntoBiotope-Habitat.tomap</tomapClassifier>
    <lemmaKeys/>
    <subject layer="words" feature="lemma"/>
    <scoreFeature>score</scoreFeature>
  </module>

  <module id="concept-names" class="OBOMapper">
    <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
    <idKeys/>
    <target>documents.sections.layer:habitats</target>
    <form>@concept-id</form>
    <nameFeature>concept-name</nameFeature>
    <pathFeature>concept-path</pathFeature>
  </module>

  <!-- Repeat ToMap using "customized" lemmas -->
  <sequence id="tomap-on-alternative-lemmas">

    <module id="tomap" class="TomapProjector">
      <yateaFile inhibitCheck="true">&outdir;/yatea/corpus/default/xml/candidates.xml</yateaFile>
      <targetLayerName>habitats2</targetLayerName>
      <conceptFeature>concept-id</conceptFeature>
      <explanationFeaturePrefix>explain_</explanationFeaturePrefix>
      <tomapClassifier graylist="resources/graylist_extended.heads" whole-proxy-distance="false" empty-words="resources/stopwords_EN.ttg">resources/OntoBiotope-Habitat.tomap</tomapClassifier>
      <lemmaKeys/>
      <subject layer="words" feature="lemma2"/>
      <scoreFeature>score</scoreFeature>
    </module>

    <module id="concept-names" class="OBOMapper">
      <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
      <idKeys/>
      <target>documents.sections.layer:habitats2</target>
      <form>@concept-id</form>
      <nameFeature>concept-name</nameFeature>
      <pathFeature>concept-path</pathFeature>
    </module>

    <!-- Add only those that are not already in layer 'habitats'-->
    <module id="add-habitats" class="Action">
      <target>documents.sections.layer:habitats2[not span:habitats]</target>
      <action>add:habitats</action>
      <addToLayer/>
    </module>

  </sequence>

  <!-- Repeat ToMap without lemmaKeys option -->
  <sequence id="tomap-no-lemmakeys">

    <module id="tomap" class="TomapProjector">
      <yateaFile inhibitCheck="true">&outdir;/yatea/corpus/default/xml/candidates.xml</yateaFile>
      <targetLayerName>habitats3</targetLayerName>
      <conceptFeature>concept-id</conceptFeature>
      <explanationFeaturePrefix>explain_</explanationFeaturePrefix>
      <tomapClassifier graylist="resources/graylist_extended.heads" whole-proxy-distance="false" empty-words="resources/stopwords_EN.ttg">resources/OntoBiotope-Habitat.tomap</tomapClassifier>
      <subject layer="words" feature="lemma"/>
      <scoreFeature>score</scoreFeature>
    </module>

    <module id="concept-names" class="OBOMapper">
      <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
      <idKeys/>
      <target>documents.sections.layer:habitats3</target>
      <form>@concept-id</form>
      <nameFeature>concept-name</nameFeature>
      <pathFeature>concept-path</pathFeature>
    </module>

    <!-- Add only those that are not already in layer 'habitats'-->
    <module id="add-habitats" class="Action">
      <target>documents.sections.layer:habitats3[not span:habitats]</target>
      <action>add:habitats</action>
      <addToLayer/>
    </module>

  </sequence>

  <!-- Repeat ToMap on variants -->
  <sequence id="tomap-on-variants">

    <module id="tomap" class="TomapProjector">
      <yateaFile inhibitCheck="true">&outdir;/yatea-var/corpus/default/xml/candidates.xml</yateaFile>
      <targetLayerName>habitats4</targetLayerName>
      <conceptFeature>concept-id</conceptFeature>
      <explanationFeaturePrefix>explain_</explanationFeaturePrefix>
      <tomapClassifier graylist="resources/graylist_extended.heads" whole-proxy-distance="false" empty-words="resources/stopwords_EN.ttg">resources/OntoBiotope-Habitat.tomap</tomapClassifier>
      <lemmaKeys/>
      <subject layer="words" feature="variant"/>
      <scoreFeature>score</scoreFeature>
    </module>

    <module id="concept-names" class="OBOMapper">
      <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
      <idKeys/>
      <target>documents.sections.layer:habitats4</target>
      <form>@concept-id</form>
      <nameFeature>concept-name</nameFeature>
      <pathFeature>concept-path</pathFeature>
    </module>

    <!-- Add only those that are not already in layer 'habitats'-->
    <module id="add-habitats" class="Action">
      <target>documents.sections.layer:habitats4[not span:habitats]</target>
      <action>add:habitats</action>
      <addToLayer/>
    </module>

  </sequence>

  <!-- Repeat ToMap on words without lemmaKeys option -->
  <sequence id="tomap-no-lemmakeys-word-form">

    <module id="tomap" class="TomapProjector">
      <yateaFile inhibitCheck="true">&outdir;/yatea/corpus/default/xml/candidates.xml</yateaFile>
      <targetLayerName>habitats5</targetLayerName>
      <conceptFeature>concept-id</conceptFeature>
      <explanationFeaturePrefix>explain_</explanationFeaturePrefix>
      <tomapClassifier graylist="resources/graylist_extended.heads" whole-proxy-distance="false" empty-words="resources/stopwords_EN.ttg">resources/OntoBiotope-Habitat.tomap</tomapClassifier>
      <subject layer="words" feature="form"/>
      <scoreFeature>score</scoreFeature>
    </module>

    <module id="concept-names" class="OBOMapper">
      <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
      <idKeys/>
      <target>documents.sections.layer:habitats5</target>
      <form>@concept-id</form>
      <nameFeature>concept-name</nameFeature>
      <pathFeature>concept-path</pathFeature>
    </module>

    <!-- Add only those that are not already in layer 'habitats'-->
    <module id="add-habitats" class="Action">
      <target>documents.sections.layer:habitats5[not span:habitats]</target>
      <action>add:habitats</action>
      <addToLayer/>
    </module>

  </sequence>

 <!-- Postprocessing -->

  <!-- Remove entities with certain characters -->
  <module id="delete-char" class="Action">
    <target>documents.sections.layer:habitats[@form =~ "^[~\\#\\*\\%\\u00D7=]" or @form =~ "\\#\\d+$" or @form =~ "\\-\\-" or start == overlapping:units{0}.start]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <module id="delete-unbalanced-parenthesis" class="Action">
    <target>documents.sections.layer:habitats[@form =~ "^[^\\(]*\\([^\\)]+$"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- Remove bacteria names -->
  <module id="delete-bacteria" class="Action">
    <target>documents.sections.layer:habitats[@form == "bacteria" or @form == "bacterium" or @explain_significant-head == "bacteria" or @explain_significant-head == "bacterium"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- Remove microorganism -->
  <module id="delete-micro" class="Action">
    <target>documents.sections.layer:habitats[@lemma == "microorganism" or @concept-name == "microorganism"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- Remove geographical locations -->
  <module id="delete-geo" class="Action">
    <target>documents.sections.layer:habitats[@concept-path ?= "OBT:002448"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- Remove water activity -->
  <module id="delete-water" class="Action">
    <target>documents.sections.layer:habitats[@lemma == "water" and after:words{0}.@lemma == "activity"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- Projet BioYatea results -->
  <module id="bioyatea-projection" class="YateaProjector">
    <targetLayerName>yateaTerms</targetLayerName>
    <!--<yateaFile inhibitCheck="true">words_prepro/default/xml/candidates_pp.xml</yateaFile>-->
    <yateaFile inhibitCheck="yes">&outdir;/yatea/corpus/default/xml/candidates.xml</yateaFile> <!-- ??? -->
    <subject layer="words"/>
  </module>

  <!-- Generate lemmatized string for predicted habitats and for yatea terms-->
  <module id="get-lemmas-for-predicted-habitats" class="Action">
    <target>documents.sections.layer:habitats</target>
    <action>set:feat:lemma-string(str:join(overlapping:words[start != target.end],@lemma," "))</action>
    <setFeatures/>
  </module>
  <module id="get-lemmas-for-yateaTerms" class="Action">
    <target>documents.sections.layer:yateaTerms</target>
    <action>set:feat:lemma-string(str:join(overlapping:words[start != target.end],@lemma," "))</action>
    <setFeatures/>
  </module>

  <syntactic-heads>
    <!-- Get head id and (lemmatized) string for predicted habitats -->
    <module id="get-head-id" class="Action">
      <target>documents.sections.layer:habitats</target>
      <action>set:feat:head-id(span:yateaTerms.@head)</action>
      <setFeatures/>
    </module>
    <module id="get-full-head" class="Action">
      <target>documents.sections.layer:habitats</target>
      <action>set:feat:full-head(overlapping:yateaTerms[@term-id == target.@head-id].@lemma-string)</action>
      <setFeatures/>
    </module>
    
    <!-- Get single-word syntactic head -->
    <module id="get-mono-head" class="Action">
      <target>documents.sections.layer:habitats</target>
      <action>set:feat:head(span:yateaTerms.@mono-head)</action>
      <setFeatures/>
    </module>
    <module id="get-mono-head2" class="Action">
      <target>documents.sections.layer:habitats[@head == ""]</target>
      <action>set:feat:head(@head-id)</action>
      <setFeatures/>
    </module>
    <module id="get-mono-head-string" class="Action">
      <target>documents.sections.layer:habitats</target>
      <action>set:feat:head-string(overlapping:yateaTerms[@term-id == target.@head].@lemma-string)</action>
      <setFeatures/>
    </module>
  </syntactic-heads>

  <!-- Tag terms that fully include their mapped concept -->
  <module id="inclusion" class="Action">
    <target>documents.sections.layer:habitats</target>
    <action>set:feat:included(@full-head != "" and (@concept-name == @full-head or @explain_concept-synonym == @full-head))</action>
    <setFeatures/>
  </module>

  <!-- Remove terms with blacklisted syntactic heads -->
  <module id="delete-blacklisted-heads" class="Action">
    <target>documents.sections.layer:habitats[@explain_significant-head in "resources/blacklisted-heads.txt" and not (@concept-name =~ " " and (str:lower(@lemma-string) ?= str:lower(@concept-name) or @score == "1.0"))]</target>
    <action>remove:habitats</action>
      <removeFromLayer/>
  </module>

  <!-- cell wall -->
  <module id="delete-wall" class="Action">
    <target>documents.sections.layer:habitats[@lemma-string =~ "(cell wall|cell-wall|cell - wall)"]</target>
    <action>remove:habitats</action>
      <removeFromLayer/>
  </module>

  <!-- specific rules to disambiguate certain terms -->

  <disambiguation-rules>
    <!-- Attempt to disambiguate "plant" -->
    <module id="delete-plant-tion" class="Action">
      <target>documents.sections.layer:habitats[@lemma-string =~ "tion plant" and @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045)" and not @lemma-string =~ "(resurrection|generation|carnation|accumulation)" ]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
    <module id="delete-plant-tion-2" class="Action">
      <target>documents.sections.layer:habitats[@lemma-string =~ "(power|electric|electricity) generation plant" and @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)"]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
    <module id="delete-plant-ing" class="Action">
      <target>documents.sections.layer:habitats[@form =~ "ing plant" and @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)" and not @form =~ "(living|demanding|degrading|flowering|accumulating|nodulating|expressing|overexpressing|promising|inhabiting|fixing|floating|neighboring|offspring|sibling|hyperaccumulating|watering|controlling|growing)"]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
    <module id="delete-plant-others" class="Action">
      <target>documents.sections.layer:habitats[@lemma-string =~ " plant" and @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)" and @lemma-string =~ "(pilot|sludge|dairy|biogas|industrial|gas|poultry|chicken|meat|ice cream|coke|cheese|commercial|biodiesel|petrochemical|biofuel|steel|removal|pesticide|petroleum|textile|sheep|beef|nitrogen|ethanol|fish|dye|filter|AD|truck repair|aerobic)"]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>

    <!-- disambiguate single term "nodule" -->
    <module id="disambiguate-nodule" class="Action">
      <target>documents.sections.layer:habitats[@head-string == "nodule" and not @score == 1 and @concept-path =~ "OBT:000349" and not section.layer:habitats[@concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000041)" and not @lemma-string =~ "nodule"]]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>

    <!-- serum : choose "blood serum" by default -->
    <module id="disambiguate-serum" class="Action">
      <target>documents.sections.layer:habitats[@head-string == "serum" and not @score == 1 and not @concept-id == "OBT:000571"]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
    
  </disambiguation-rules>

  <!-- Get food entities -->
  <module id="get-food-process" class="Action">
    <target>documents.sections.layer:habitats[nav:features:concept-path[@value =~ "/OBT:000208/"]]</target>
    <action>add:all-food-process</action>
    <addToLayer/>
  </module>
  <module id="keep-highest-score" class="Action">
      <target>documents.sections.layer:all-food-process</target>
      <action>set:feat:highest(not span:all-food-process[@score > target.@score])</action>
      <setFeatures/>
   </module>
  <module id="delete-not-selected" class="Action">
      <target>documents.sections.layer:all-food-process[not @highest == "true"]</target>
      <action>remove:all-food-process</action>
      <removeFromLayer/>
   </module>

<!-- <rule-for-food-corpus> -->
<!--    <module id="tag-overlap-food" class="Action"> -->
<!--       <target>documents[@id in "corpus/&corpus;/food-pmids.txt"].sections.layer:habitats[not @concept-path =~ "OBT:000003/"]</target> -->
<!--       <action>set:feat:overlap-food(span:habitats[@score == target.@score and @concept-path =~ "OBT:000003/"])</action> -->
<!--       <setFeatures/> -->
<!--     </module> -->
<!--    <module id="remove-overlap-food" class="Action"> -->
<!--      <target>documents[@id in "corpus/&corpus;/food-pmids.txt"].sections.layer:habitats[not @concept-path =~ "OBT:000003/" and not @overlap-food == ""]</target> -->
<!--       <action>remove:habitats</action> -->
<!--       <removeFromLayer/> -->
<!--     </module> -->
<!-- </rule-for-food-corpus> -->

  <!-- Choose a concept when multiple concepts have been mapped to a term -->

  <sequence id="choose-candidate">
    <!-- 1. Keep only the highest scored concepts -->
    <module id="keep-highest-score" class="Action">
      <target>documents.sections.layer:habitats</target>
      <action>set:feat:highest(not span:habitats[@score > target.@score])</action>
      <setFeatures/>
    </module>
    <!-- 2. Select candidates which (lemmatized) string matches a concept preferred name as opposed to those that match a concept synonym (this is for disambiguation of exact matches only)-->
    <module id="select-one-candidate-1" class="Action">
      <target>documents.sections.layer:habitats[@highest == "true"]</target>
      <action>set:feat:selected1(@lemma-string == @concept-name or not span:habitats[@highest == "true" and @lemma-string == @concept-name])</action>
      <setFeatures/>
    </module>
    <!-- 3. Lexical inclusion : select in priority concepts that are included in the extracted habitat -->
    <module id="select-included" class="Action">
      <target>documents.sections.layer:habitats[@selected1 == "true"]</target>
      <action>set:feat:selected2(@included == "true" or not span:habitats[@selected1 == "true" and @included == "true"])</action>
      <setFeatures/>
    </module>
   <!-- 5. Select most generic candidate -->
  <module id="select-generic" class="Action">
    <target>documents.sections.layer:habitats[@selected2 == "true"]</target>
    <action>set:feat:selected3(not span:habitats[@selected2 == "true" and str:len(target.@concept-path) > str:len(@concept-path)])</action>
    <setFeatures/>
  </module>
    <!-- 4. Random : sort the candidates and choose the first one-->
    <module id="temp-id" class="Action">
      <target>documents.sections</target>
      <action>id:enumerate:tempid(sort:sval(layer:habitats[@selected3 == "true"],@concept-name))</action>
      <setFeatures/>
    </module>
    <module id="select-one-candidate" class="Action">
      <target>documents.sections.layer:habitats[@selected3 == "true"]</target>
      <action>set:feat:selected(not span:habitats[@selected3 == "true" and target.@tempid > @tempid])</action>
      <setFeatures/>
    </module>
    <!-- delete not selected -->
    <module id="delete-not-selected" class="Action">
      <target>documents.sections.layer:habitats[not @selected == "true"]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
  </sequence>

  <!-- Filtering of embedded terms -->

  <filter-embedded>
    <!-- remove terms nested in terms mapped with a more specific concept -->
    <sequence id="remove-embedded-generic">
      <module id="keep" class="Action">
	<target>documents.sections.layer:habitats[@selected == "true"]</target>
	<action>set:feat:no-parent(not outside:habitats[@selected == "true" and @concept-path ?= target.@concept-id])</action>
	<setFeatures/>
      </module>
      <module id="delete" class="Action">
	<target>documents.sections.layer:habitats[@no-parent == "false"]</target>
	<action>remove:habitats</action>
      <removeFromLayer/>
      </module>
    </sequence>

    <!-- remove terms nested in terms with the same (significant) head -->
    <sequence id="remove-embedded-in-term-with-same-significant-head">
      <module id="keep" class="Action">
	<target>documents.sections.layer:habitats[@selected == "true"]</target>
	<action>set:feat:diff-head(not outside:habitats[@selected == "true" and @explain_significant-head == target.@explain_significant-head and not @explain_significant-head == ""])</action>
	<setFeatures/>
      </module>
      <module id="delete" class="Action">
	<target>documents.sections.layer:habitats[@diff-head == "false"]</target>
	<action>remove:habitats</action>
      <removeFromLayer/>
      </module>
    </sequence>

    <!-- remove terms nested in terms with the same (mono-word) head -->
    <sequence id="remove-embedded-in-term-with-same-head">
      <module id="keep" class="Action">
	<target>documents.sections.layer:habitats[@selected == "true"]</target>
	<action>set:feat:diff-head(not outside:habitats[@selected == "true" and @head == target.@head and not @head == ""])</action>
	<setFeatures/>
      </module>
      <module id="delete" class="Action">
	<target>documents.sections.layer:habitats[@diff-head != "true"]</target>
	<action>remove:habitats</action>
      <removeFromLayer/>
      </module>
    </sequence>

  </filter-embedded>

  <!-- remove blacklisted terms -->
  <module id="delete-blacklisted" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @lemma-string in "resources/blacklist.txt"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- remove single-word terms with certain POS (currently only "VVN")-->
  <module id="delete-VVN" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and span:words.@tt_pos =~ "(VVN|VVZ|VVD|VVP)"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- remove terms with scores under a certain threshold (0.15) -->
  <module id="delete-low-score" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and 0.15 > @score]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- remove certain ambiguities (terms "secretion", "vector") -->

  <secretion-vector1>
    <module id="delete-secretion" class="Action">
      <target>documents.sections.layer:habitats[@selected == "true" and (@lemma-string =~ "secretion (system|apparatus|machine|machinery)" or @lemma-string=~ "type .+ secretion" or @lemma-string=~ "protein (.+ )?secretion" or @lemma-string=~ "level secretion")]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
  <module id="delete-vectors" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @lemma-string =~ "(fusion|expression|reporter) vector"]</target>
    <action>remove:habitats</action>
      <removeFromLayer/>
  </module>
  </secretion-vector1>

  <secretion-vector2>
    <module id="delete-secretion" class="Action">
      <target>documents.sections.layer:habitats[@selected == "true" and (@lemma-string=~ "secretion" and overlapping:words[@genia-entity =~ "(protein|RNA|DNA)"])]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>

    <module id="delete-vectors" class="Action">
      <target>documents.sections.layer:habitats[@selected == "true" and (@lemma-string=~ "vector" and overlapping:words[@genia-entity =~ "(protein|RNA|DNA)"])]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
    </module>
  </secretion-vector2>

  <!-- disambiguate single term "plant" -->

  <module id="contextual-disambiguation" class="Action">
      <target>documents.sections.layer:habitats[@selected == "true" and @lemma-string == "plant" and section.layer:habitats[@selected == "true" and @head-string =~ "plant" and not @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)"]]</target>
      <action>set:feat:concept-name(section.layer:habitats[@selected == "true" and @head-string =~ "plant" and not @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)"]{0}.@concept-name)|set:feat:concept-path(section.layer:habitats[@selected == "true" and @head-string =~ "plant" and not @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)"]{0}.@concept-path)|set:feat:concept-id(section.layer:habitats[@selected == "true" and @head-string =~ "plant" and not @concept-path =~ "(MBTO:00000294|ID:00000238|OBT:000219|OBT:000045|OBT:000003)"]{0}.@concept-id)</action>
      <setFeatures/>
    </module>


  <!-- remove gerund single terms matched with a concept that is not a gerund (e.g. "harboring" matched with "harbor") -->

  <module id="delete-Ving" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and span:words.@tt_pos=="VVG" and not @concept-name=~ "ing$"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>


  <!-- remove "cell" occurring in the context of a bacteria (TO CHECK) -->
  <module id="delete-cell-in-bacteria" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @concept-name == "cell" and (before:words{-1}.@ne-type=="Bacteria" or before:words{-1}.overlapping:bacteria or before:words{-2}.@ne-type=="Bacteria" or before:words{-2}.overlapping:bacteria or after:words{1}.@ne-type=="Bacteria" or after:words{1}.overlapping:bacteria or after:words{2}.@ne-type=="Bacteria" or after:words{2}.overlapping:bacteria or inside:words[@ne-type == "Bacteria"])]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- remove "gel" in "gel electrophoresis" -->
  <module id="delete-gel" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @lemma-string == "gel" and after:words{0}.@lemma == "electrophoresis"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

  <!-- remove "individual", "professional" if adjective -->
  <module id="delete-Xal" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @lemma-string =~ "^(individual|professional)$" and span:words.@tt_pos=="JJ"]</target>
    <action>remove:habitats</action>
    <removeFromLayer/>
  </module>

   <!-- Deal with "facility" (temporary fix) -->
    <module id="disambiguate-facility" class="Action">
      <target>documents.sections.layer:habitats[@head-string == "facility" and not @score == 1]</target>
      
      <action>set:feat:concept-id("OBT:000242")|set:feat:concept-name("public building")</action>
      <setFeatures/>
    </module>

   <!-- Add taxa that are not microorganisms (as living organisms, for now) -->
   <module id="add-taxa" class="Action">
    <target>documents.sections.layer:taxa[not @microorganism and not overlapping:habitats and not @canonical-name =~ "(Bacteria|metagenome|plasmid|Viruses|Archaea)" and not @form =~ "\\d+" and not @lemma == "^(test|Data|data)$" and not @path =~ "/10239/" and not @form =~ "^..?$" and not @form =~ "^[A-Z] \\S+$"]</target>
    <action>add:habitats|set:feat:selected("true")|set:feat:concept-id("OBT:000002")|set:feat:concept-name("living organism")</action>
    <addToLayer/>
    <setFeatures/>
    </module>
   <!-- map some of the living organisms to more specific concepts -->
  <module id="map-living-organisms" class="FileMapper2">
    <mappingFile>resources/NCBI_taxa_ontobiotope.txt</mappingFile>
    <target>documents.sections.layer:habitats[@taxid != ""]</target>
    <form>@taxid</form>
    <keyColumn>1</keyColumn>
    <targetFeatures>common-name,taxid,concept-id,concept-name,concept-path</targetFeatures>
  </module>

  <!-- remove terms tagged with concept "microorganism gas vesicle" (to check) -->
  <module id="delete-vesicle" class="Action">
    <target>documents.sections.layer:habitats[@selected == "true" and @concept-name == "microorganism gas vesicle"]</target>
    <action>remove:habitats</action>
      <removeFromLayer/>
  </module>

  <!-- Deal with abbreviations -->

  <module id="get-concept-id-for-abbreviations" class="Action">
    <target>documents.sections.layer:short-forms[not outside:words]</target>
    <action>set:feat:concept-id(str:join:'|'(sort:nsval(tuples:abbreviations:short-form.args:long-form.span:habitats[@selected == "true"],@concept-id),@concept-id)) | set:feat:score(str:join:'|'(sort:nsval(tuples:abbreviations:short-form.args:long-form.span:habitats[@selected == "true"],@concept-id), @score)) | set:feat:concept-name(str:join:'|'(sort:nsval(tuples:abbreviations:short-form.args:long-form.span:habitats[@selected == "true"],@concept-id),@concept-name)) | set:feat:concept-path(str:join:'|'(sort:nsval(tuples:abbreviations:short-form.args:long-form.span:habitats[@selected == "true"],@concept-id),@concept-path))</action>
    <setFeatures/>
  </module>
   <module id="remove-abb" class="Action">
      <target>documents.sections.layer:habitats[span:short-forms[not @concept-id == ""]]</target>
      <action>remove:habitats</action>
      <removeFromLayer/>
  </module>
  <module id="add-abb" class="Action">
      <target>documents.sections.layer:short-forms[not @concept-id == ""]</target>
      <action>set:feat:selected("true") | add:habitats |remove:short-forms</action>
      <addToLayer/>
      <setFeatures/>
  </module>

  <!-- Tag food processes -->
  <import file="plans/tag-food-process.plan"/>

<!-- Add concept-path in case some are missing -->
    <module id="concept-path" class="OBOMapper">
      <oboFiles>resources/OntoBiotope-Habitat.obo</oboFiles>
      <idKeys/>
      <target>documents.sections.layer:habitats</target>
      <form>@concept-id</form>
      <nameFeature>concept-name</nameFeature>
      <pathFeature>concept-path</pathFeature>
    </module>

</alvisnlp-plan>




